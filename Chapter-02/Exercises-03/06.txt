Observe that the while loop of lines 5-7 of the INSERTION-SORT procedure in
Section 2.1 uses a linear search to scan (backward) through the sorted subarray
A[1..j-1]. Can we use a binary search (see Exervise 2.3-5) instead to improve
the overall worst-case running time of insertion sort to Θ﴾n lg n)?

Because the backward scan doesn't only scan (it also moves elements to make
room for the insertion of the element currently being sorted), the insertion
sort cannot use the binary search.  If it did the elements that needed to be
shifted would not be shifted.
