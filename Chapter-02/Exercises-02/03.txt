Consider linear search again (see Exercise 2.1-3). How many elements of the
input sequence need to be checked on the average, assuming the element being
searched for is equally likely to be any element in the array?  How about in
the worst case?  What are the average-case and worst-case running times of
linear search in Θ-notation? Justify your answers.

Because the probability of the searched for element being in any particular
location is equal the average number of elements needed to be checked is N/2.

The worst case is that all N elements must be checked.  This would occur
because the only way to find out that an element doesn't exists or is in the
last location is by discovering that all other elements don't contain it.

The average running time and worst case running time are both Θ(N).  The
average number of elements checked and worst case number of elements checked
both grow linearly with the size of the array.  In the average case this occurs
because each element still has an equally likely chance of containing the
element, in the worst case this is true because the algorithm must still 
execute the loop for each element in the array.
